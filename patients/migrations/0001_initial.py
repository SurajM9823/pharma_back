# Generated by Django 4.2.7 on 2025-09-19 20:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MedicalRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("record_id", models.CharField(max_length=20, unique=True)),
                (
                    "record_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("prescription", "Prescription"),
                            ("test_result", "Test Result"),
                            ("diagnosis", "Diagnosis"),
                            ("treatment", "Treatment"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("symptoms", models.TextField(blank=True)),
                ("diagnosis", models.TextField(blank=True)),
                ("treatment_plan", models.TextField(blank=True)),
                ("medications_prescribed", models.JSONField(blank=True, default=list)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
                ("doctor_name", models.CharField(max_length=100)),
                ("doctor_license", models.CharField(blank=True, max_length=50)),
                (
                    "doctor_signature",
                    models.TextField(
                        blank=True, help_text="Digital signature or notes"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("record_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_medical_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Medical Record",
                "verbose_name_plural": "Medical Records",
                "ordering": ["-record_date"],
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patient_id",
                    models.CharField(
                        help_text="Unique patient identifier",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+977-1-234567' or '9801234567' (10 digits for local Nepali numbers).",
                                regex="^(?:\\+977[-]?\\d{1,2}[-]?\\d{6,8}|\\d{10})$",
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(default="Nepal", max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(default="Nepal", max_length=100)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=15),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=50),
                ),
                ("blood_group", models.CharField(blank=True, max_length=5)),
                (
                    "allergies",
                    models.TextField(
                        blank=True, help_text="Known allergies and reactions"
                    ),
                ),
                (
                    "chronic_conditions",
                    models.TextField(
                        blank=True, help_text="Chronic medical conditions"
                    ),
                ),
                (
                    "current_medications",
                    models.TextField(blank=True, help_text="Current medications"),
                ),
                ("insurance_provider", models.CharField(blank=True, max_length=100)),
                ("insurance_number", models.CharField(blank=True, max_length=50)),
                ("insurance_expiry", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("deceased", "Deceased"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                (
                    "organization_id",
                    models.IntegerField(
                        help_text="Organization this patient belongs to"
                    ),
                ),
                (
                    "branch_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Primary branch for this patient",
                        null=True,
                    ),
                ),
                ("preferred_language", models.CharField(default="en", max_length=20)),
                ("marketing_consent", models.BooleanField(default=False)),
                ("sms_notifications", models.BooleanField(default=True)),
                ("email_notifications", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
                "ordering": ["last_name", "first_name"],
                "unique_together": {("organization_id", "patient_id")},
            },
        ),
        migrations.CreateModel(
            name="PatientVisit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visit_id", models.CharField(max_length=20, unique=True)),
                (
                    "visit_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("prescription_refill", "Prescription Refill"),
                            ("purchase", "Purchase"),
                            ("follow_up", "Follow-up"),
                        ],
                        max_length=20,
                    ),
                ),
                ("visit_date", models.DateTimeField()),
                ("purpose", models.CharField(max_length=200)),
                ("notes", models.TextField(blank=True)),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("items_purchased", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attended_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patient_visits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visits",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient Visit",
                "verbose_name_plural": "Patient Visits",
                "ordering": ["-visit_date"],
            },
        ),
        migrations.CreateModel(
            name="PatientPrescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prescription_id", models.CharField(max_length=20, unique=True)),
                ("doctor_name", models.CharField(max_length=100)),
                ("doctor_license", models.CharField(blank=True, max_length=50)),
                (
                    "medications",
                    models.JSONField(
                        default=list,
                        help_text="List of prescribed medications with dosage, frequency, etc.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Special instructions or notes"
                    ),
                ),
                ("prescription_date", models.DateTimeField()),
                ("valid_until", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("partial", "Partial"),
                            ("completed", "Completed"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_patient_prescriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="patients.medicalrecord",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient Prescription",
                "verbose_name_plural": "Patient Prescriptions",
                "ordering": ["-prescription_date"],
            },
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="medical_records",
                to="patients.patient",
            ),
        ),
    ]
