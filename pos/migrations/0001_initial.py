# Generated by Django 5.2.6 on 2025-09-14 06:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('customer_code', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Nepal', max_length=100)),
                ('customer_type', models.CharField(choices=[('retail', 'Retail Customer'), ('wholesale', 'Wholesale Customer'), ('hospital', 'Hospital'), ('clinic', 'Clinic'), ('pharmacy', 'Pharmacy')], default='retail', max_length=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted')], default='active', max_length=15)),
                ('allergies', models.TextField(blank=True)),
                ('medical_conditions', models.TextField(blank=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=15)),
                ('loyalty_points', models.PositiveIntegerField(default=0)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('member_since', models.DateField(auto_now_add=True)),
                ('last_visit', models.DateField(blank=True, null=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['-last_visit', 'first_name', 'last_name'],
                'unique_together': {('organization', 'customer_code')},
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_number', models.CharField(max_length=50, unique=True)),
                ('prescribed_by', models.CharField(max_length=100)),
                ('prescribed_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('dispensed', 'Dispensed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('diagnosis', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='organizations.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='pos.customer')),
                ('dispensed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispensed_prescriptions', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'ordering': ['-prescribed_date'],
                'unique_together': {('organization', 'prescription_number')},
            },
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('quantity_prescribed', models.PositiveIntegerField()),
                ('quantity_dispensed', models.PositiveIntegerField(default=0)),
                ('is_dispensed', models.BooleanField(default=False)),
                ('dispensed_date', models.DateField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True)),
                ('pharmacist_notes', models.TextField(blank=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pos.prescription')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription_items', to='inventory.product')),
            ],
            options={
                'verbose_name': 'Prescription Item',
                'verbose_name_plural': 'Prescription Items',
                'unique_together': {('prescription', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_number', models.CharField(max_length=50, unique=True)),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('sale_type', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('credit', 'Credit'), ('insurance', 'Insurance'), ('mixed', 'Mixed Payment')], default='cash', max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=15)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('change_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('card_last_four', models.CharField(blank=True, max_length=4)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='organizations.branch')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_sales', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_sales', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='pos.customer')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='organizations.organization')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='pos.prescription')),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_number', models.CharField(max_length=50, unique=True)),
                ('return_date', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(choices=[('damaged', 'Damaged Product'), ('expired', 'Expired Product'), ('wrong_item', 'Wrong Item'), ('customer_request', 'Customer Request'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=15)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_returns', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='organizations.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_returns', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='pos.customer')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='organizations.organization')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_returns', to=settings.AUTH_USER_MODEL)),
                ('original_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='pos.sale')),
            ],
            options={
                'verbose_name': 'Return',
                'verbose_name_plural': 'Returns',
                'ordering': ['-return_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('credit', 'Credit'), ('insurance', 'Insurance')], default='cash', max_length=15)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('card_last_four', models.CharField(blank=True, max_length=4)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('cheque_number', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='pos.sale')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(100)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('prescription_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_items', to='pos.prescriptionitem')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_items', to='inventory.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pos.sale')),
            ],
            options={
                'verbose_name': 'Sale Item',
                'verbose_name_plural': 'Sale Items',
            },
        ),
        migrations.CreateModel(
            name='ReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_returned', models.PositiveIntegerField()),
                ('quantity_accepted', models.PositiveIntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('condition', models.CharField(choices=[('good', 'Good'), ('damaged', 'Damaged'), ('expired', 'Expired')], default='good', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_items', to='inventory.product')),
                ('return_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pos.return')),
                ('original_sale_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_items', to='pos.saleitem')),
            ],
            options={
                'verbose_name': 'Return Item',
                'verbose_name_plural': 'Return Items',
            },
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['sale_date', 'organization'], name='pos_sale_sale_da_eb2b68_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status', 'sale_date'], name='pos_sale_status_9b78c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sale',
            unique_together={('organization', 'sale_number')},
        ),
        migrations.AlterUniqueTogether(
            name='return',
            unique_together={('organization', 'return_number')},
        ),
        migrations.AlterUniqueTogether(
            name='saleitem',
            unique_together={('sale', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='returnitem',
            unique_together={('return_transaction', 'product')},
        ),
    ]
